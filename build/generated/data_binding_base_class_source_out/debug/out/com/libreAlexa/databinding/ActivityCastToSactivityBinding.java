// Generated by view binder compiler. Do not edit!
package com.libreAlexa.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.webkit.WebView;
import android.widget.ProgressBar;
import android.widget.RelativeLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatButton;
import androidx.appcompat.widget.AppCompatImageView;
import androidx.appcompat.widget.AppCompatTextView;
import androidx.appcompat.widget.Toolbar;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.libreAlexa.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityCastToSactivityBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final AppCompatButton btnAccept;

  @NonNull
  public final AppCompatButton btnSkip;

  @NonNull
  public final AppCompatImageView imageView;

  @NonNull
  public final AppCompatImageView imgClose;

  /**
   * This binding is not available in all configurations.
   * <p>
   * Present:
   * <ul>
   *   <li>layout/</li>
   * </ul>
   *
   * Absent:
   * <ul>
   *   <li>layout-sw600dp/</li>
   * </ul>
   */
  @Nullable
  public final RelativeLayout layLoader;

  @NonNull
  public final RelativeLayout parentLayout;

  /**
   * This binding is not available in all configurations.
   * <p>
   * Present:
   * <ul>
   *   <li>layout/</li>
   * </ul>
   *
   * Absent:
   * <ul>
   *   <li>layout-sw600dp/</li>
   * </ul>
   */
  @Nullable
  public final ProgressBar progressBar;

  @NonNull
  public final Toolbar toolbar;

  @NonNull
  public final AppCompatTextView txtCastTos;

  @NonNull
  public final WebView webView;

  private ActivityCastToSactivityBinding(@NonNull ConstraintLayout rootView,
      @NonNull AppCompatButton btnAccept, @NonNull AppCompatButton btnSkip,
      @NonNull AppCompatImageView imageView, @NonNull AppCompatImageView imgClose,
      @Nullable RelativeLayout layLoader, @NonNull RelativeLayout parentLayout,
      @Nullable ProgressBar progressBar, @NonNull Toolbar toolbar,
      @NonNull AppCompatTextView txtCastTos, @NonNull WebView webView) {
    this.rootView = rootView;
    this.btnAccept = btnAccept;
    this.btnSkip = btnSkip;
    this.imageView = imageView;
    this.imgClose = imgClose;
    this.layLoader = layLoader;
    this.parentLayout = parentLayout;
    this.progressBar = progressBar;
    this.toolbar = toolbar;
    this.txtCastTos = txtCastTos;
    this.webView = webView;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityCastToSactivityBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityCastToSactivityBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_cast_to_sactivity, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityCastToSactivityBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_accept;
      AppCompatButton btnAccept = ViewBindings.findChildViewById(rootView, id);
      if (btnAccept == null) {
        break missingId;
      }

      id = R.id.btn_skip;
      AppCompatButton btnSkip = ViewBindings.findChildViewById(rootView, id);
      if (btnSkip == null) {
        break missingId;
      }

      id = R.id.imageView;
      AppCompatImageView imageView = ViewBindings.findChildViewById(rootView, id);
      if (imageView == null) {
        break missingId;
      }

      id = R.id.img_close;
      AppCompatImageView imgClose = ViewBindings.findChildViewById(rootView, id);
      if (imgClose == null) {
        break missingId;
      }

      id = R.id.lay_Loader;
      RelativeLayout layLoader = ViewBindings.findChildViewById(rootView, id);

      id = R.id.parent_Layout;
      RelativeLayout parentLayout = ViewBindings.findChildViewById(rootView, id);
      if (parentLayout == null) {
        break missingId;
      }

      id = R.id.progress_bar;
      ProgressBar progressBar = ViewBindings.findChildViewById(rootView, id);

      id = R.id.toolbar;
      Toolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      id = R.id.txt_cast_tos;
      AppCompatTextView txtCastTos = ViewBindings.findChildViewById(rootView, id);
      if (txtCastTos == null) {
        break missingId;
      }

      id = R.id.web_View;
      WebView webView = ViewBindings.findChildViewById(rootView, id);
      if (webView == null) {
        break missingId;
      }

      return new ActivityCastToSactivityBinding((ConstraintLayout) rootView, btnAccept, btnSkip,
          imageView, imgClose, layLoader, parentLayout, progressBar, toolbar, txtCastTos, webView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
