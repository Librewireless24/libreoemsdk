// Generated by view binder compiler. Do not edit!
package com.libreAlexa.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.webkit.WebView;
import android.widget.RelativeLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatButton;
import androidx.appcompat.widget.AppCompatImageView;
import androidx.appcompat.widget.AppCompatTextView;
import androidx.appcompat.widget.Toolbar;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.libreAlexa.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityHelpImproveChromeCastBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final AppCompatButton btnNoThanks;

  @NonNull
  public final AppCompatButton btnYesImIn;

  @NonNull
  public final AppCompatImageView imgClose;

  @NonNull
  public final RelativeLayout parentLayout;

  @NonNull
  public final Toolbar toolbar;

  @NonNull
  public final AppCompatTextView txtDoYouWant;

  @NonNull
  public final AppCompatTextView txtImproveChromecast;

  @NonNull
  public final AppCompatTextView txtLearnMore;

  @NonNull
  public final WebView webView;

  private ActivityHelpImproveChromeCastBinding(@NonNull ConstraintLayout rootView,
      @NonNull AppCompatButton btnNoThanks, @NonNull AppCompatButton btnYesImIn,
      @NonNull AppCompatImageView imgClose, @NonNull RelativeLayout parentLayout,
      @NonNull Toolbar toolbar, @NonNull AppCompatTextView txtDoYouWant,
      @NonNull AppCompatTextView txtImproveChromecast, @NonNull AppCompatTextView txtLearnMore,
      @NonNull WebView webView) {
    this.rootView = rootView;
    this.btnNoThanks = btnNoThanks;
    this.btnYesImIn = btnYesImIn;
    this.imgClose = imgClose;
    this.parentLayout = parentLayout;
    this.toolbar = toolbar;
    this.txtDoYouWant = txtDoYouWant;
    this.txtImproveChromecast = txtImproveChromecast;
    this.txtLearnMore = txtLearnMore;
    this.webView = webView;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityHelpImproveChromeCastBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityHelpImproveChromeCastBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_help_improve_chrome_cast, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityHelpImproveChromeCastBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_noThanks;
      AppCompatButton btnNoThanks = ViewBindings.findChildViewById(rootView, id);
      if (btnNoThanks == null) {
        break missingId;
      }

      id = R.id.btn_yesImIn;
      AppCompatButton btnYesImIn = ViewBindings.findChildViewById(rootView, id);
      if (btnYesImIn == null) {
        break missingId;
      }

      id = R.id.img_close;
      AppCompatImageView imgClose = ViewBindings.findChildViewById(rootView, id);
      if (imgClose == null) {
        break missingId;
      }

      id = R.id.parent_Layout;
      RelativeLayout parentLayout = ViewBindings.findChildViewById(rootView, id);
      if (parentLayout == null) {
        break missingId;
      }

      id = R.id.toolbar;
      Toolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      id = R.id.txt_do_you_want;
      AppCompatTextView txtDoYouWant = ViewBindings.findChildViewById(rootView, id);
      if (txtDoYouWant == null) {
        break missingId;
      }

      id = R.id.txt_improve_Chromecast;
      AppCompatTextView txtImproveChromecast = ViewBindings.findChildViewById(rootView, id);
      if (txtImproveChromecast == null) {
        break missingId;
      }

      id = R.id.txt_learn_more;
      AppCompatTextView txtLearnMore = ViewBindings.findChildViewById(rootView, id);
      if (txtLearnMore == null) {
        break missingId;
      }

      id = R.id.web_View;
      WebView webView = ViewBindings.findChildViewById(rootView, id);
      if (webView == null) {
        break missingId;
      }

      return new ActivityHelpImproveChromeCastBinding((ConstraintLayout) rootView, btnNoThanks,
          btnYesImIn, imgClose, parentLayout, toolbar, txtDoYouWant, txtImproveChromecast,
          txtLearnMore, webView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
