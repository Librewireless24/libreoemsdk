// Generated by view binder compiler. Do not edit!
package com.libreAlexa.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ProgressBar;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatImageButton;
import androidx.appcompat.widget.AppCompatImageView;
import androidx.appcompat.widget.AppCompatSeekBar;
import androidx.appcompat.widget.AppCompatTextView;
import androidx.appcompat.widget.Toolbar;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.cumulations.libreV2.CheckableImageView;
import com.google.android.material.appbar.AppBarLayout;
import com.libreAlexa.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class CtActivityMediaSourcesBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final AppBarLayout appbarLayout;

  @NonNull
  public final MusicPlayingWidgetBinding ilMusicPlayingWidget;

  @NonNull
  public final AppCompatImageButton ivAlexaSettings;

  @NonNull
  public final AppCompatImageButton ivBack;

  @NonNull
  public final AppCompatImageButton ivDeviceSettings;

  @NonNull
  public final CheckableImageView ivToggleAux;

  @NonNull
  public final CheckableImageView ivToggleBluetooth;

  @NonNull
  public final AppCompatImageView ivVolumeMute;

  @NonNull
  public final AppCompatImageView ivVolumeUp;

  @NonNull
  public final ProgressBar progressBar;

  @NonNull
  public final RecyclerView rvMediaSourcesList;

  @NonNull
  public final AppCompatSeekBar seekBarVolume;

  @NonNull
  public final Toolbar toolbar;

  @NonNull
  public final AppCompatTextView tvDeviceName;

  @NonNull
  public final AppCompatTextView tvInputLabel;

  private CtActivityMediaSourcesBinding(@NonNull CoordinatorLayout rootView,
      @NonNull AppBarLayout appbarLayout, @NonNull MusicPlayingWidgetBinding ilMusicPlayingWidget,
      @NonNull AppCompatImageButton ivAlexaSettings, @NonNull AppCompatImageButton ivBack,
      @NonNull AppCompatImageButton ivDeviceSettings, @NonNull CheckableImageView ivToggleAux,
      @NonNull CheckableImageView ivToggleBluetooth, @NonNull AppCompatImageView ivVolumeMute,
      @NonNull AppCompatImageView ivVolumeUp, @NonNull ProgressBar progressBar,
      @NonNull RecyclerView rvMediaSourcesList, @NonNull AppCompatSeekBar seekBarVolume,
      @NonNull Toolbar toolbar, @NonNull AppCompatTextView tvDeviceName,
      @NonNull AppCompatTextView tvInputLabel) {
    this.rootView = rootView;
    this.appbarLayout = appbarLayout;
    this.ilMusicPlayingWidget = ilMusicPlayingWidget;
    this.ivAlexaSettings = ivAlexaSettings;
    this.ivBack = ivBack;
    this.ivDeviceSettings = ivDeviceSettings;
    this.ivToggleAux = ivToggleAux;
    this.ivToggleBluetooth = ivToggleBluetooth;
    this.ivVolumeMute = ivVolumeMute;
    this.ivVolumeUp = ivVolumeUp;
    this.progressBar = progressBar;
    this.rvMediaSourcesList = rvMediaSourcesList;
    this.seekBarVolume = seekBarVolume;
    this.toolbar = toolbar;
    this.tvDeviceName = tvDeviceName;
    this.tvInputLabel = tvInputLabel;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static CtActivityMediaSourcesBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static CtActivityMediaSourcesBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.ct_activity_media_sources, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static CtActivityMediaSourcesBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.appbarLayout;
      AppBarLayout appbarLayout = ViewBindings.findChildViewById(rootView, id);
      if (appbarLayout == null) {
        break missingId;
      }

      id = R.id.ilMusicPlayingWidget;
      View ilMusicPlayingWidget = ViewBindings.findChildViewById(rootView, id);
      if (ilMusicPlayingWidget == null) {
        break missingId;
      }
      MusicPlayingWidgetBinding binding_ilMusicPlayingWidget = MusicPlayingWidgetBinding.bind(ilMusicPlayingWidget);

      id = R.id.iv_alexa_settings;
      AppCompatImageButton ivAlexaSettings = ViewBindings.findChildViewById(rootView, id);
      if (ivAlexaSettings == null) {
        break missingId;
      }

      id = R.id.iv_back;
      AppCompatImageButton ivBack = ViewBindings.findChildViewById(rootView, id);
      if (ivBack == null) {
        break missingId;
      }

      id = R.id.iv_device_settings;
      AppCompatImageButton ivDeviceSettings = ViewBindings.findChildViewById(rootView, id);
      if (ivDeviceSettings == null) {
        break missingId;
      }

      id = R.id.iv_toggle_aux;
      CheckableImageView ivToggleAux = ViewBindings.findChildViewById(rootView, id);
      if (ivToggleAux == null) {
        break missingId;
      }

      id = R.id.iv_toggle_bluetooth;
      CheckableImageView ivToggleBluetooth = ViewBindings.findChildViewById(rootView, id);
      if (ivToggleBluetooth == null) {
        break missingId;
      }

      id = R.id.iv_volume_mute;
      AppCompatImageView ivVolumeMute = ViewBindings.findChildViewById(rootView, id);
      if (ivVolumeMute == null) {
        break missingId;
      }

      id = R.id.iv_volume_up;
      AppCompatImageView ivVolumeUp = ViewBindings.findChildViewById(rootView, id);
      if (ivVolumeUp == null) {
        break missingId;
      }

      id = R.id.progress_bar;
      ProgressBar progressBar = ViewBindings.findChildViewById(rootView, id);
      if (progressBar == null) {
        break missingId;
      }

      id = R.id.rv_media_sources_list;
      RecyclerView rvMediaSourcesList = ViewBindings.findChildViewById(rootView, id);
      if (rvMediaSourcesList == null) {
        break missingId;
      }

      id = R.id.seek_bar_volume;
      AppCompatSeekBar seekBarVolume = ViewBindings.findChildViewById(rootView, id);
      if (seekBarVolume == null) {
        break missingId;
      }

      id = R.id.toolbar;
      Toolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      id = R.id.tv_device_name;
      AppCompatTextView tvDeviceName = ViewBindings.findChildViewById(rootView, id);
      if (tvDeviceName == null) {
        break missingId;
      }

      id = R.id.tv_input_label;
      AppCompatTextView tvInputLabel = ViewBindings.findChildViewById(rootView, id);
      if (tvInputLabel == null) {
        break missingId;
      }

      return new CtActivityMediaSourcesBinding((CoordinatorLayout) rootView, appbarLayout,
          binding_ilMusicPlayingWidget, ivAlexaSettings, ivBack, ivDeviceSettings, ivToggleAux,
          ivToggleBluetooth, ivVolumeMute, ivVolumeUp, progressBar, rvMediaSourcesList,
          seekBarVolume, toolbar, tvDeviceName, tvInputLabel);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
