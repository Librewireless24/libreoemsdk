// Generated by view binder compiler. Do not edit!
package com.libreAlexa.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatImageView;
import androidx.appcompat.widget.AppCompatTextView;
import androidx.appcompat.widget.Toolbar;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import androidx.viewpager.widget.ViewPager;
import com.google.android.material.appbar.AppBarLayout;
import com.google.android.material.tabs.TabLayout;
import com.google.android.material.textfield.TextInputEditText;
import com.libreAlexa.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class CtActivityUpnpBrowserBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final AppBarLayout appBar;

  @NonNull
  public final TextInputEditText etSearchMedia;

  @NonNull
  public final MusicPlayingWidgetBinding ilMusicPlayingWidget;

  @NonNull
  public final AppCompatImageView ivAlexaSettings;

  @NonNull
  public final AppCompatImageView ivBack;

  @NonNull
  public final AppCompatImageView ivToggleListType;

  @NonNull
  public final TabLayout tabsLayoutMusicType;

  @NonNull
  public final Toolbar toolbar;

  @NonNull
  public final AppCompatTextView tvDeviceName;

  @NonNull
  public final ViewPager viewPagerTabs;

  private CtActivityUpnpBrowserBinding(@NonNull CoordinatorLayout rootView,
      @NonNull AppBarLayout appBar, @NonNull TextInputEditText etSearchMedia,
      @NonNull MusicPlayingWidgetBinding ilMusicPlayingWidget,
      @NonNull AppCompatImageView ivAlexaSettings, @NonNull AppCompatImageView ivBack,
      @NonNull AppCompatImageView ivToggleListType, @NonNull TabLayout tabsLayoutMusicType,
      @NonNull Toolbar toolbar, @NonNull AppCompatTextView tvDeviceName,
      @NonNull ViewPager viewPagerTabs) {
    this.rootView = rootView;
    this.appBar = appBar;
    this.etSearchMedia = etSearchMedia;
    this.ilMusicPlayingWidget = ilMusicPlayingWidget;
    this.ivAlexaSettings = ivAlexaSettings;
    this.ivBack = ivBack;
    this.ivToggleListType = ivToggleListType;
    this.tabsLayoutMusicType = tabsLayoutMusicType;
    this.toolbar = toolbar;
    this.tvDeviceName = tvDeviceName;
    this.viewPagerTabs = viewPagerTabs;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static CtActivityUpnpBrowserBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static CtActivityUpnpBrowserBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.ct_activity_upnp_browser, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static CtActivityUpnpBrowserBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.appBar;
      AppBarLayout appBar = ViewBindings.findChildViewById(rootView, id);
      if (appBar == null) {
        break missingId;
      }

      id = R.id.et_search_media;
      TextInputEditText etSearchMedia = ViewBindings.findChildViewById(rootView, id);
      if (etSearchMedia == null) {
        break missingId;
      }

      id = R.id.il_musicPlayingWidget;
      View ilMusicPlayingWidget = ViewBindings.findChildViewById(rootView, id);
      if (ilMusicPlayingWidget == null) {
        break missingId;
      }
      MusicPlayingWidgetBinding binding_ilMusicPlayingWidget = MusicPlayingWidgetBinding.bind(ilMusicPlayingWidget);

      id = R.id.iv_alexa_settings;
      AppCompatImageView ivAlexaSettings = ViewBindings.findChildViewById(rootView, id);
      if (ivAlexaSettings == null) {
        break missingId;
      }

      id = R.id.iv_back;
      AppCompatImageView ivBack = ViewBindings.findChildViewById(rootView, id);
      if (ivBack == null) {
        break missingId;
      }

      id = R.id.iv_toggle_list_type;
      AppCompatImageView ivToggleListType = ViewBindings.findChildViewById(rootView, id);
      if (ivToggleListType == null) {
        break missingId;
      }

      id = R.id.tabs_layout_music_type;
      TabLayout tabsLayoutMusicType = ViewBindings.findChildViewById(rootView, id);
      if (tabsLayoutMusicType == null) {
        break missingId;
      }

      id = R.id.toolbar;
      Toolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      id = R.id.tv_device_name;
      AppCompatTextView tvDeviceName = ViewBindings.findChildViewById(rootView, id);
      if (tvDeviceName == null) {
        break missingId;
      }

      id = R.id.view_pager_tabs;
      ViewPager viewPagerTabs = ViewBindings.findChildViewById(rootView, id);
      if (viewPagerTabs == null) {
        break missingId;
      }

      return new CtActivityUpnpBrowserBinding((CoordinatorLayout) rootView, appBar, etSearchMedia,
          binding_ilMusicPlayingWidget, ivAlexaSettings, ivBack, ivToggleListType,
          tabsLayoutMusicType, toolbar, tvDeviceName, viewPagerTabs);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
