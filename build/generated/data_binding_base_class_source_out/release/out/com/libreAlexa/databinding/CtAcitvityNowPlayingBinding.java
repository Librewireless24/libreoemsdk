// Generated by view binder compiler. Do not edit!
package com.libreAlexa.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import android.widget.RelativeLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatImageButton;
import androidx.appcompat.widget.AppCompatImageView;
import androidx.appcompat.widget.AppCompatSeekBar;
import androidx.appcompat.widget.AppCompatTextView;
import androidx.appcompat.widget.Toolbar;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.cumulations.libreV2.ProgressButtonImageView;
import com.libreAlexa.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class CtAcitvityNowPlayingBinding implements ViewBinding {
  @NonNull
  private final FrameLayout rootView;

  @NonNull
  public final LinearLayout ilMusic;

  @NonNull
  public final AppCompatImageView ivAlbumArt;

  @NonNull
  public final AppCompatImageButton ivAlexaAccount;

  @NonNull
  public final AppCompatImageButton ivBack;

  @NonNull
  public final AppCompatImageView ivBlurredAlbumArt;

  @NonNull
  public final AppCompatImageView ivNext;

  @NonNull
  public final ProgressButtonImageView ivPlayPause;

  @NonNull
  public final AppCompatImageView ivPrevious;

  @NonNull
  public final AppCompatImageView ivRepeat;

  @NonNull
  public final AppCompatImageView ivShuffle;

  @NonNull
  public final AppCompatImageView ivSourceIcon;

  @NonNull
  public final AppCompatImageView ivVolumeDown;

  @NonNull
  public final LinearLayout layPlay;

  @NonNull
  public final LinearLayout layPlayControls;

  @NonNull
  public final ProgressBar loader;

  @NonNull
  public final AppCompatImageView mediaBtnSkipNext;

  @NonNull
  public final AppCompatImageView mediaBtnSkipPrev;

  @NonNull
  public final RelativeLayout mshuffleFavRepeat;

  @NonNull
  public final AppCompatSeekBar seekBarSong;

  @NonNull
  public final AppCompatSeekBar seekBarVolume;

  @NonNull
  public final Toolbar toolbar;

  @NonNull
  public final AppCompatTextView tvAlbumName;

  @NonNull
  public final AppCompatTextView tvCurrentDuration;

  @NonNull
  public final AppCompatTextView tvDeviceName;

  @NonNull
  public final AppCompatTextView tvSourceType;

  @NonNull
  public final AppCompatTextView tvTotalDuration;

  @NonNull
  public final AppCompatTextView tvTrackName;

  private CtAcitvityNowPlayingBinding(@NonNull FrameLayout rootView, @NonNull LinearLayout ilMusic,
      @NonNull AppCompatImageView ivAlbumArt, @NonNull AppCompatImageButton ivAlexaAccount,
      @NonNull AppCompatImageButton ivBack, @NonNull AppCompatImageView ivBlurredAlbumArt,
      @NonNull AppCompatImageView ivNext, @NonNull ProgressButtonImageView ivPlayPause,
      @NonNull AppCompatImageView ivPrevious, @NonNull AppCompatImageView ivRepeat,
      @NonNull AppCompatImageView ivShuffle, @NonNull AppCompatImageView ivSourceIcon,
      @NonNull AppCompatImageView ivVolumeDown, @NonNull LinearLayout layPlay,
      @NonNull LinearLayout layPlayControls, @NonNull ProgressBar loader,
      @NonNull AppCompatImageView mediaBtnSkipNext, @NonNull AppCompatImageView mediaBtnSkipPrev,
      @NonNull RelativeLayout mshuffleFavRepeat, @NonNull AppCompatSeekBar seekBarSong,
      @NonNull AppCompatSeekBar seekBarVolume, @NonNull Toolbar toolbar,
      @NonNull AppCompatTextView tvAlbumName, @NonNull AppCompatTextView tvCurrentDuration,
      @NonNull AppCompatTextView tvDeviceName, @NonNull AppCompatTextView tvSourceType,
      @NonNull AppCompatTextView tvTotalDuration, @NonNull AppCompatTextView tvTrackName) {
    this.rootView = rootView;
    this.ilMusic = ilMusic;
    this.ivAlbumArt = ivAlbumArt;
    this.ivAlexaAccount = ivAlexaAccount;
    this.ivBack = ivBack;
    this.ivBlurredAlbumArt = ivBlurredAlbumArt;
    this.ivNext = ivNext;
    this.ivPlayPause = ivPlayPause;
    this.ivPrevious = ivPrevious;
    this.ivRepeat = ivRepeat;
    this.ivShuffle = ivShuffle;
    this.ivSourceIcon = ivSourceIcon;
    this.ivVolumeDown = ivVolumeDown;
    this.layPlay = layPlay;
    this.layPlayControls = layPlayControls;
    this.loader = loader;
    this.mediaBtnSkipNext = mediaBtnSkipNext;
    this.mediaBtnSkipPrev = mediaBtnSkipPrev;
    this.mshuffleFavRepeat = mshuffleFavRepeat;
    this.seekBarSong = seekBarSong;
    this.seekBarVolume = seekBarVolume;
    this.toolbar = toolbar;
    this.tvAlbumName = tvAlbumName;
    this.tvCurrentDuration = tvCurrentDuration;
    this.tvDeviceName = tvDeviceName;
    this.tvSourceType = tvSourceType;
    this.tvTotalDuration = tvTotalDuration;
    this.tvTrackName = tvTrackName;
  }

  @Override
  @NonNull
  public FrameLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static CtAcitvityNowPlayingBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static CtAcitvityNowPlayingBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.ct_acitvity_now_playing, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static CtAcitvityNowPlayingBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.ilMusic;
      LinearLayout ilMusic = ViewBindings.findChildViewById(rootView, id);
      if (ilMusic == null) {
        break missingId;
      }

      id = R.id.iv_album_art;
      AppCompatImageView ivAlbumArt = ViewBindings.findChildViewById(rootView, id);
      if (ivAlbumArt == null) {
        break missingId;
      }

      id = R.id.iv_alexa_account;
      AppCompatImageButton ivAlexaAccount = ViewBindings.findChildViewById(rootView, id);
      if (ivAlexaAccount == null) {
        break missingId;
      }

      id = R.id.iv_back;
      AppCompatImageButton ivBack = ViewBindings.findChildViewById(rootView, id);
      if (ivBack == null) {
        break missingId;
      }

      id = R.id.iv_blurred_album_art;
      AppCompatImageView ivBlurredAlbumArt = ViewBindings.findChildViewById(rootView, id);
      if (ivBlurredAlbumArt == null) {
        break missingId;
      }

      id = R.id.iv_next;
      AppCompatImageView ivNext = ViewBindings.findChildViewById(rootView, id);
      if (ivNext == null) {
        break missingId;
      }

      id = R.id.iv_playPause;
      ProgressButtonImageView ivPlayPause = ViewBindings.findChildViewById(rootView, id);
      if (ivPlayPause == null) {
        break missingId;
      }

      id = R.id.iv_previous;
      AppCompatImageView ivPrevious = ViewBindings.findChildViewById(rootView, id);
      if (ivPrevious == null) {
        break missingId;
      }

      id = R.id.iv_repeat;
      AppCompatImageView ivRepeat = ViewBindings.findChildViewById(rootView, id);
      if (ivRepeat == null) {
        break missingId;
      }

      id = R.id.iv_shuffle;
      AppCompatImageView ivShuffle = ViewBindings.findChildViewById(rootView, id);
      if (ivShuffle == null) {
        break missingId;
      }

      id = R.id.iv_source_icon;
      AppCompatImageView ivSourceIcon = ViewBindings.findChildViewById(rootView, id);
      if (ivSourceIcon == null) {
        break missingId;
      }

      id = R.id.iv_volume_down;
      AppCompatImageView ivVolumeDown = ViewBindings.findChildViewById(rootView, id);
      if (ivVolumeDown == null) {
        break missingId;
      }

      id = R.id.lay_Play;
      LinearLayout layPlay = ViewBindings.findChildViewById(rootView, id);
      if (layPlay == null) {
        break missingId;
      }

      id = R.id.lay_PlayControls;
      LinearLayout layPlayControls = ViewBindings.findChildViewById(rootView, id);
      if (layPlayControls == null) {
        break missingId;
      }

      id = R.id.loader;
      ProgressBar loader = ViewBindings.findChildViewById(rootView, id);
      if (loader == null) {
        break missingId;
      }

      id = R.id.media_btn_skip_next;
      AppCompatImageView mediaBtnSkipNext = ViewBindings.findChildViewById(rootView, id);
      if (mediaBtnSkipNext == null) {
        break missingId;
      }

      id = R.id.media_btn_skip_prev;
      AppCompatImageView mediaBtnSkipPrev = ViewBindings.findChildViewById(rootView, id);
      if (mediaBtnSkipPrev == null) {
        break missingId;
      }

      id = R.id.mshuffleFavRepeat;
      RelativeLayout mshuffleFavRepeat = ViewBindings.findChildViewById(rootView, id);
      if (mshuffleFavRepeat == null) {
        break missingId;
      }

      id = R.id.seek_bar_song;
      AppCompatSeekBar seekBarSong = ViewBindings.findChildViewById(rootView, id);
      if (seekBarSong == null) {
        break missingId;
      }

      id = R.id.seek_bar_volume;
      AppCompatSeekBar seekBarVolume = ViewBindings.findChildViewById(rootView, id);
      if (seekBarVolume == null) {
        break missingId;
      }

      id = R.id.toolbar;
      Toolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      id = R.id.tv_albumName;
      AppCompatTextView tvAlbumName = ViewBindings.findChildViewById(rootView, id);
      if (tvAlbumName == null) {
        break missingId;
      }

      id = R.id.tv_current_duration;
      AppCompatTextView tvCurrentDuration = ViewBindings.findChildViewById(rootView, id);
      if (tvCurrentDuration == null) {
        break missingId;
      }

      id = R.id.tv_device_name;
      AppCompatTextView tvDeviceName = ViewBindings.findChildViewById(rootView, id);
      if (tvDeviceName == null) {
        break missingId;
      }

      id = R.id.tv_source_type;
      AppCompatTextView tvSourceType = ViewBindings.findChildViewById(rootView, id);
      if (tvSourceType == null) {
        break missingId;
      }

      id = R.id.tv_total_duration;
      AppCompatTextView tvTotalDuration = ViewBindings.findChildViewById(rootView, id);
      if (tvTotalDuration == null) {
        break missingId;
      }

      id = R.id.tv_track_name;
      AppCompatTextView tvTrackName = ViewBindings.findChildViewById(rootView, id);
      if (tvTrackName == null) {
        break missingId;
      }

      return new CtAcitvityNowPlayingBinding((FrameLayout) rootView, ilMusic, ivAlbumArt,
          ivAlexaAccount, ivBack, ivBlurredAlbumArt, ivNext, ivPlayPause, ivPrevious, ivRepeat,
          ivShuffle, ivSourceIcon, ivVolumeDown, layPlay, layPlayControls, loader, mediaBtnSkipNext,
          mediaBtnSkipPrev, mshuffleFavRepeat, seekBarSong, seekBarVolume, toolbar, tvAlbumName,
          tvCurrentDuration, tvDeviceName, tvSourceType, tvTotalDuration, tvTrackName);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
