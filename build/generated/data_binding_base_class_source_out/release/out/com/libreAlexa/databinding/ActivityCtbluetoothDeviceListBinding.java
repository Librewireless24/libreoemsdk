// Generated by view binder compiler. Do not edit!
package com.libreAlexa.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.ListView;
import android.widget.RelativeLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatButton;
import androidx.appcompat.widget.AppCompatImageView;
import androidx.appcompat.widget.AppCompatTextView;
import androidx.appcompat.widget.Toolbar;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.appbar.AppBarLayout;
import com.libreAlexa.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityCtbluetoothDeviceListBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final AppBarLayout appbarLayout;

  @NonNull
  public final AppCompatImageView btnRefresh;

  @NonNull
  public final AppCompatButton btnTurnOnBt;

  @NonNull
  public final AppCompatImageView ivBack;

  @NonNull
  public final ListView ivBledevicelist;

  @NonNull
  public final AppCompatImageView ivRefresh;

  @NonNull
  public final RelativeLayout layDeviceCount;

  @NonNull
  public final LinearLayout layNoBtOn;

  @NonNull
  public final LinearLayout layTurnOnBt;

  @NonNull
  public final LinearLayout noBleDeviceFrameLayout;

  @NonNull
  public final Toolbar toolbar;

  @NonNull
  public final AppCompatTextView tvTurnOnBle;

  @NonNull
  public final AppCompatTextView txtDeviceCount;

  private ActivityCtbluetoothDeviceListBinding(@NonNull CoordinatorLayout rootView,
      @NonNull AppBarLayout appbarLayout, @NonNull AppCompatImageView btnRefresh,
      @NonNull AppCompatButton btnTurnOnBt, @NonNull AppCompatImageView ivBack,
      @NonNull ListView ivBledevicelist, @NonNull AppCompatImageView ivRefresh,
      @NonNull RelativeLayout layDeviceCount, @NonNull LinearLayout layNoBtOn,
      @NonNull LinearLayout layTurnOnBt, @NonNull LinearLayout noBleDeviceFrameLayout,
      @NonNull Toolbar toolbar, @NonNull AppCompatTextView tvTurnOnBle,
      @NonNull AppCompatTextView txtDeviceCount) {
    this.rootView = rootView;
    this.appbarLayout = appbarLayout;
    this.btnRefresh = btnRefresh;
    this.btnTurnOnBt = btnTurnOnBt;
    this.ivBack = ivBack;
    this.ivBledevicelist = ivBledevicelist;
    this.ivRefresh = ivRefresh;
    this.layDeviceCount = layDeviceCount;
    this.layNoBtOn = layNoBtOn;
    this.layTurnOnBt = layTurnOnBt;
    this.noBleDeviceFrameLayout = noBleDeviceFrameLayout;
    this.toolbar = toolbar;
    this.tvTurnOnBle = tvTurnOnBle;
    this.txtDeviceCount = txtDeviceCount;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityCtbluetoothDeviceListBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityCtbluetoothDeviceListBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_ctbluetooth_device_list, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityCtbluetoothDeviceListBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.appbarLayout;
      AppBarLayout appbarLayout = ViewBindings.findChildViewById(rootView, id);
      if (appbarLayout == null) {
        break missingId;
      }

      id = R.id.btn_refresh;
      AppCompatImageView btnRefresh = ViewBindings.findChildViewById(rootView, id);
      if (btnRefresh == null) {
        break missingId;
      }

      id = R.id.btn_turn_on_bt;
      AppCompatButton btnTurnOnBt = ViewBindings.findChildViewById(rootView, id);
      if (btnTurnOnBt == null) {
        break missingId;
      }

      id = R.id.iv_back;
      AppCompatImageView ivBack = ViewBindings.findChildViewById(rootView, id);
      if (ivBack == null) {
        break missingId;
      }

      id = R.id.iv_bledevicelist;
      ListView ivBledevicelist = ViewBindings.findChildViewById(rootView, id);
      if (ivBledevicelist == null) {
        break missingId;
      }

      id = R.id.iv_refresh;
      AppCompatImageView ivRefresh = ViewBindings.findChildViewById(rootView, id);
      if (ivRefresh == null) {
        break missingId;
      }

      id = R.id.lay_deviceCount;
      RelativeLayout layDeviceCount = ViewBindings.findChildViewById(rootView, id);
      if (layDeviceCount == null) {
        break missingId;
      }

      id = R.id.lay_no_bt_on;
      LinearLayout layNoBtOn = ViewBindings.findChildViewById(rootView, id);
      if (layNoBtOn == null) {
        break missingId;
      }

      id = R.id.lay_turn_on_bt;
      LinearLayout layTurnOnBt = ViewBindings.findChildViewById(rootView, id);
      if (layTurnOnBt == null) {
        break missingId;
      }

      id = R.id.no_ble_device_frame_layout;
      LinearLayout noBleDeviceFrameLayout = ViewBindings.findChildViewById(rootView, id);
      if (noBleDeviceFrameLayout == null) {
        break missingId;
      }

      id = R.id.toolbar;
      Toolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      id = R.id.tvTurnOnBle;
      AppCompatTextView tvTurnOnBle = ViewBindings.findChildViewById(rootView, id);
      if (tvTurnOnBle == null) {
        break missingId;
      }

      id = R.id.txt_deviceCount;
      AppCompatTextView txtDeviceCount = ViewBindings.findChildViewById(rootView, id);
      if (txtDeviceCount == null) {
        break missingId;
      }

      return new ActivityCtbluetoothDeviceListBinding((CoordinatorLayout) rootView, appbarLayout,
          btnRefresh, btnTurnOnBt, ivBack, ivBledevicelist, ivRefresh, layDeviceCount, layNoBtOn,
          layTurnOnBt, noBleDeviceFrameLayout, toolbar, tvTurnOnBle, txtDeviceCount);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
