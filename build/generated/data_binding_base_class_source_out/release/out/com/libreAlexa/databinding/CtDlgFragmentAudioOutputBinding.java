// Generated by view binder compiler. Do not edit!
package com.libreAlexa.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.RadioButton;
import android.widget.RadioGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.libreAlexa.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class CtDlgFragmentAudioOutputBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final RadioButton rbLeft;

  @NonNull
  public final RadioButton rbPower;

  @NonNull
  public final RadioButton rbRight;

  @NonNull
  public final RadioButton rbTrillium;

  @NonNull
  public final RadioGroup rgAudioOutput;

  private CtDlgFragmentAudioOutputBinding(@NonNull LinearLayout rootView,
      @NonNull RadioButton rbLeft, @NonNull RadioButton rbPower, @NonNull RadioButton rbRight,
      @NonNull RadioButton rbTrillium, @NonNull RadioGroup rgAudioOutput) {
    this.rootView = rootView;
    this.rbLeft = rbLeft;
    this.rbPower = rbPower;
    this.rbRight = rbRight;
    this.rbTrillium = rbTrillium;
    this.rgAudioOutput = rgAudioOutput;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static CtDlgFragmentAudioOutputBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static CtDlgFragmentAudioOutputBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.ct_dlg_fragment_audio_output, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static CtDlgFragmentAudioOutputBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.rb_left;
      RadioButton rbLeft = ViewBindings.findChildViewById(rootView, id);
      if (rbLeft == null) {
        break missingId;
      }

      id = R.id.rb_power;
      RadioButton rbPower = ViewBindings.findChildViewById(rootView, id);
      if (rbPower == null) {
        break missingId;
      }

      id = R.id.rb_right;
      RadioButton rbRight = ViewBindings.findChildViewById(rootView, id);
      if (rbRight == null) {
        break missingId;
      }

      id = R.id.rb_trillium;
      RadioButton rbTrillium = ViewBindings.findChildViewById(rootView, id);
      if (rbTrillium == null) {
        break missingId;
      }

      id = R.id.rg_audio_output;
      RadioGroup rgAudioOutput = ViewBindings.findChildViewById(rootView, id);
      if (rgAudioOutput == null) {
        break missingId;
      }

      return new CtDlgFragmentAudioOutputBinding((LinearLayout) rootView, rbLeft, rbPower, rbRight,
          rbTrillium, rgAudioOutput);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
